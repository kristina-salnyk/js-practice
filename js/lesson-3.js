import { nanoid } from 'https://cdn.jsdelivr.net/npm/nanoid/nanoid.js';

//1. –ù–∞–ø–∏—à–∏—Ç–µ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
// letMeSeeYourName(callback) - —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//—á–µ—Ä–µ–∑ prompt –∏ –≤—ã–∑—ã–≤–∞–µ—Ç callback —Ñ—É–Ω–∫—Ü–∏—é
//greet(name) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –∏–º—è –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å
//—Å—Ç—Ä–æ–∫—É "–ü—Ä–∏–≤–µ—Ç <name>"
//–†–µ–∞–ª–∏–∑—É–π –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ prompt –Ω–µ –ø—É—Å—Ç–æ–π
//++++++++++++++++++++++++++++++++++++++++++

const letMeSeeYourName = callback => {
  const name = prompt('Enter your name');
  return callback(name);
};

const greet = name => `Hello, ${name}`;

// console.log(letMeSeeYourName(greet));

//====================================================
//2. –ù–∞–ø–∏—à–∏—Ç–µ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
//makeProduct(name, price, callback) - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
//–∏–º—è –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞, –∞ —Ç–∞–∫ –∂–µ callback.
//–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞, –¥–æ–±–∞–≤–ª—è—è –µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã–π
//–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ —Å–≤–æ–π—Å—Ç–≤–æ id –∏ –≤—ã–∑—ã–≤–∞–µ—Ç callback
//–ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.
//showProduct(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç
//–ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
//++++++++++++++++++++++++++++++++++++++++++

const makeProduct = (name, price, callback) => {
  const obj = { name, price, id: nanoid() };
  callback(obj);
};

const showProduct = product => console.log(product);

makeProduct('Fish', 350, showProduct);

//====================================================
//3. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ makeDish —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ
//–∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–º—è —à–µ—Ñ–∞.
//–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é makeShef(shefName) –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é
//makeDish(dish), –ø–æ–º–Ω—è—â—É—é –∏–º—è —à–µ—Ñ–∞ –ø—Ä–∏ –µ—ë –≤—ã–∑–æ–≤–µ

const makeDish = function (shefName, dish) {
  console.log(`${shefName} is cooking ${dish}`);
};

// makeDish('Mango', 'apple pie');
// makeDish('Poly', 'muffins');

const makeShef = shefName => dish => console.log(`${shefName} is cooking ${dish}`);

//++++++++++++++++++++++++++++++++++++++++++

const mango = makeShef('Mango');
mango('apple pie'); // Mango is cooking apple pie
mango('beef stew'); // Mango is cooking beef stew

const poly = makeShef('Poly');
poly('pancakes'); // Poly is cooking pancakes
poly('eggs and bacon'); // Poly is cooking eggs and bacon

//====================================================
//4. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–ª

const product = {
  price: 5000,
  showPrice() {
    console.log(this.price);
  },
};

product.showPrice();

//====================================================
//5. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –∫–æ–¥ —Ä–∞–±–æ—Ç–∞–ª

function callAction(action) {
  action();
}

// ++++++++++++++++++++++++++++++++++++++++++

callAction(product.showPrice.bind(product));

//====================================================
//6. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é each(array, callback), –∫–æ—Ç–æ—Ä–∞—è
//–ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤, –∞ –≤—Ç–æ—Ä—ã–º - —Ñ—É–Ω–∫—Ü–∏—é,
//–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞.
//–§—É–Ω–∫—Ü–∏—è each –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
//–∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–∑–æ–≤–∞ callback
//callback —Ñ—É–Ω–∫—Ü–∏ –¥–æ–ª–∂–Ω–∞ —É–º–Ω–æ–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ 2
//++++++++++++++++++++++++++++++++++++++++++

const array = [3, 5, 6, 34, 8, 83, 12, 34];

function each(array, callback) {
  return array.map(element => callback(element));
}

console.log(each(array, value => value * 2));

//====================================================
//7. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é makeCounter, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥—Ä—É–≥—É—é
//—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–∏—Ö –≤—ã–∑–æ–≤–æ–≤
//++++++++++++++++++++++++++++++++++++++++++

const makeCounter = () => {
  let counter = 0;
  return () => counter++;
};

const counter = makeCounter();

console.log(counter());
console.log(counter());
console.log(counter());

//====================================================
//8. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é savePassword(password) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
//–ø–∞—Ä–æ–ª—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
//—Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–ª—å true, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º
//–ø–∞—Ä–æ–ª–µ–º –∏ false - –µ—Å–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç
//++++++++++++++++++++++++++++++++++++++++++

const savePassword = password => confirmPassword => confirmPassword === password;

const standartPassword = savePassword('qwerty');
console.log(standartPassword('qwerty'));
console.log(standartPassword('qwert'));

//====================================================
//9. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏.–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
//–¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏
//–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—É–º–º—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Å–∫–∏–¥–∫–æ–π.

//++++++++++++++++++++++++++++++++++++++++++

function saveDiscount(discont) {
  return amount => amount - discont;
}

const discountPremium = saveDiscount(50);
console.log(discountPremium(1000));

//++++++++++++++++++++++++++++++++++++++++++

function one(callback) {
  return callback ? callback(1) : 1;
}
function two(callback) {
  return callback ? callback(2) : 2;
}
function three(callback) {
  return callback ? callback(3) : 3;
}
function four(callback) {
  return callback ? callback(4) : 4;
}
function five(callback) {
  return callback ? callback(5) : 5;
}
function six(callback) {
  return callback ? callback(6) : 6;
}
function seven(callback) {
  return callback ? callback(7) : 7;
}
function eight(callback) {
  return callback ? callback(8) : 8;
}
function nine(callback) {
  return callback ? callback(9) : 9;
}

const number = (value, callback) => (callback ? callback(value) : value);

function plus(a) {
  return b => a + b;
}
function minus(a) {
  return b => a - b;
}
function divide(a) {
  return b => b / a;
}
function mult(a) {
  return b => a * b;
}

console.log(number(10, plus(number(4)))); // 14

console.log(one(plus(three()))); // 4
console.log(four(mult(three()))); // 12
console.log(four(divide(two())));

//1. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä User –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
//a. userName - –∏–º—è, —Å—Ç—Ä–æ–∫–∞
//b. age - –≤–æ–∑—Ä–∞—Å—Ç, —á–∏—Å–ª–æ
//c. numbersOfPost - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤, —á–∏—Å–ª–æ
//d. –∫–ª–∞—Å—Å –æ–∂–∏–¥–∞–µ—Ç 1 –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –æ–¥–Ω–æ–∏–º–µ–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏

//–î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ getInfo(), –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É:
//`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${} ${} –ª–µ—Ç –∏ —É –Ω–µ–≥–æ ${} –ø—É–±–ª–∏–∫–∞—Ü–∏–π.`

const User = function (userObj) {
  const { userName, age, numbersOfPost } = userObj;
  this.userName = userName;
  this.age = age;
  this.numbersOfPost = numbersOfPost;

  console.log('üê±‚Äçüë§üëÄ: User -> typeof this', typeof this);
};

User.prototype.getInfo = function () {
  return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${this.userName} ${this.age} –ª–µ—Ç –∏ —É –Ω–µ–≥–æ ${this.numbersOfPost} –ø—É–±–ª–∏–∫–∞—Ü–∏–π.`;
};

const polly = new User({ userName: 'Polly', age: 30, numbersOfPost: 15 });

console.log(polly);
console.log(polly.getInfo());

//2. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Storage –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–∫—Ç—ã
//–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä–æ–≤.
//–ü—Ä–∏ –≤—ã–∑–æ–≤–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–¥–∏–Ω –∞–≥—Ä—É–º–µ–Ω—Ç - –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤,
//–∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–æ items.
//–î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞:
// getItems() - –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤
// addItems(item) - –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –∫ —Ç–µ–∫—É—â–∏–º
// removeItem(item) - –ø–ª—É—á–∞–µ—Ç —Ç–æ–≤–∞—Ä –∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ —Ç–µ–∫—É—â–∏—Ö

const Storage = function (itemsArray) {
  this.items = itemsArray;
};

Storage.prototype.getItems = function () {
  return this.items;
};

Storage.prototype.addItems = function (item) {
  this.items = this.items.includes(item) ? this.items : this.items.concat(item);
};

Storage.prototype.removeItem = function (item) {
  this.items = this.items.filter(elem => item !== elem);
};

const storage = new Storage(['apple', 'banana', 'mango']);
console.log(storage);
console.log(storage.removeItem('apple'));

//3. –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Client –∫–æ—Ç—Ä–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç
//—Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ login email
//–û–±—ä—è–≤–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ #login #email,
//–¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ç–æ—Ä—ã–º —Å–¥–µ–ª–∞–π —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä login email

class Client {
  #login;
  #email;

  constructor({ login, email }) {
    this.#login = login;
    this.#email = email;
  }

  get login() {
    return this.#login;
  }

  set login(newLogin) {
    this.#login = newLogin;
  }

  get email() {
    return this.#email;
  }

  get getClientData() {
    return { login: this.#login, email: this.#email };
  }

  set changeEmail(newEmail) {
    return (this.#email = newEmail);
  }
}

const client = new Client('mango', 'mango@gmail.com');
client.changeEmail = '"mango@gmail.com"';

console.log(client.getClientData.email);

//4. –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å Notes –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∑–∞–º–µ—Ç–æ–∫ –≤
//—Å–≤–æ–π—Å—Ç–≤–µ items.
//–ó–∞–º–µ—Ç–∫–∞ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ text priority
//–î–æ–±–∞–≤—å –∫–ª–∞—Å—Å—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ Priopity,
//–≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.
//–î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã addNote(note), removeNote(text)
//updatePriority(text, newPriority)

class Notes {
  static Priority() {
    return { HIGHT: 'hight', LOW: 'low' };
  }

  constructor() {
    this.items = [];
  }

  addNote({ text, priority }) {
    if (priority === Notes.Priority().HIGHT) this.items.splice(0, 0, text);
    else this.items.push(text);
  }

  removeNote(text) {
    this.items = this.items.filter(item => item !== text);
  }

  updatePriority(text, newPriority) {
    this.removeNote(text);
    this.addNote({ text, priority: newPriority });
  }
}

const note1 = new Notes();

note1.addNote({ text: 'Note1', priority: Notes.Priority().LOW });
note1.addNote({ text: 'Note2', priority: Notes.Priority().LOW });
note1.updatePriority({ text: 'Note2', newPriority: Notes.Priority().HIGHT });
console.table(note1.items);

//5. –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Worker —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ name, age, salary.
//–£ –∫–ª–∞—Å—Å–∞ Worker –µ—Å—Ç—å –º–µ—Ç–æ–¥ getSalary.
//–°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å TopLevelWorker —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ hierarchyLevel
//–∏ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç –∫–ª–∞—Å—Å Worker, –¥–æ–±–∞–≤–ª—è—è –º–µ—Ç–æ–¥ getHierarchyLevel
//–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É —Å –ø–æ–º–æ—â—å—é ES5 –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤ –∏ ES6 –∫–ª–∞—Å—Å–æ–≤

const HIERARCHY_LEVEL = {
  TOP: 'top',
  BOTTOM: 'bottom',
};

const workerObj = {
  name: 'Mango',
  surname: 'Worker',
  age: 30,
  position: 'FE developer',
  salary: 5000,
};

//ES5

const Worker = function (obj = { name, age, salary }) {
  const { name, age, salary } = obj;
  this.name = name;
  this.age = age;
  this.salary = salary;
};

Worker.prototype.getSalary = function () {
  return `Employee ${this.name} has salary ${this.salary}`;
};

const TopLevelWorker = function (obj, hierarchyLevel) {
  Worker.call(this, obj);
  this.hierarchyLevel = hierarchyLevel;
};

TopLevelWorker.prototype = Object.create(Worker.prototype);

TopLevelWorker.prototype.constructor = TopLevelWorker;

const top = new TopLevelWorker(workerObj, HIERARCHY_LEVEL.BOTTOM);

console.log(top.__proto__ === TopLevelWorker.prototype);
console.log(TopLevelWorker.prototype.__proto__ === Worker.prototype);
console.log(TopLevelWorker.prototype.__proto__.__proto__ === Object.prototype);
console.log(TopLevelWorker.__proto__ === Function.prototype);
console.log(Worker.__proto__ === Function.prototype);
console.log(Worker.prototype.__proto__ === Object.prototype);
console.log(top.__proto__.__proto__.__proto__ === Object.prototype);
top.getSalary();

// ES6

class WorkerES6 {
  constructor({ name, age, salary }) {
    this.name = name;
    this.age = age;
    this.salary = salary;
  }

  getSalary() {
    return `Employee ${this.name} has salary ${this.salary}`;
  }
}

class TopLevelWorkerES6 extends WorkerES6 {
  constructor(obj, hierarchyLevel) {
    super(obj);
    this.hierarchyLevel = hierarchyLevel;
  }
}

const topES6 = new TopLevelWorkerES6(workerObj, HIERARCHY_LEVEL.TOP);

console.log(TopLevelWorkerES6.prototype.__proto__ === WorkerES6.prototype);
console.log(TopLevelWorkerES6.__proto__ === WorkerES6);
console.log(topES6.__proto__ === TopLevelWorkerES6.prototype);
console.log(topES6.getSalary());
